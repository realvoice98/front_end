

경우가 세가지 이상일때는 삼항연산자가 유용하지 않음.

!사이트에 애니메이션 주기

클래스를 만들어, 컴포넌트가 작동할때마다 탈부착하는 방식으로 애니메이션을 할 수 있으나, 그렇게하면 코드도 길어지고 복잡해지기때문에 react-transition-group 라이브러리를 사용하여 애니메이션을 구현.

사용법 : 애니메이션을 구현할 컴포넌트를 CSSTransition이라는 컴포넌트로 감싼후 속성값으로 in={},classNames,timeout을 지정하여 사용,
css에서 클래스명-enter (등장시 상태값) 클래스명-enter-active(등장끝난후 상태값) 지정하여 애니메이션 구현가능.

enter는 등장, exit는 퇴장으로 사용 가능. 더 자세한건 라이브러리 페이지 가서 공부해보기 ~~!

세세한팁 : import시에 {}로 감싼것은 함수/변수를 가져오겠단 것이고 없는것은 export default한 것을 가져오겠다는 뜻.


!Table구조

- <thead><tbody> 지워도 됨 쓸데없음
- <tr>가로 (행) 만들기
- <td/th> 세로 (열) 만들기

!redux

설치 : nom install redux react-redux (두개를 설치해야함)
쓰는이유 1: props없이 모든 컴포넌트가 state를 갖다쓰기 가능
쓰는이유 2: 수정방법을 미리 정의합니다. Reducer 함수 사용
state데이터 관리가 용이하다.

reducer두개 이상을 내보내려면, combineReducers()안에 {}객체형태로 담아서 보내야함

Redux store에 온갖 데이터 저장 하지마,
모달창닫는건 그 페이지에서만 작동하기때문에 useState()사용가능

컴포넌트엔 onClick이벤트 지정 불가.



findIndex : array 안에서 원하는 데이터 찾아주는 함수
findIndex는 내가 찾는것이 몇번째 인덱스에 있는건지
find는 그냥 값을 찾아주는것
